// <auto-generated />
using HospitalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalProject.Models.Department", b =>
                {
                    b.Property<int>("departmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("departmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hospitalId")
                        .HasColumnType("int");

                    b.HasKey("departmentId");

                    b.HasIndex("hospitalId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("HospitalProject.Models.Doctor", b =>
                {
                    b.Property<int>("doctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("specialityId")
                        .HasColumnType("int");

                    b.HasKey("doctorId");

                    b.HasIndex("specialityId");

                    b.ToTable("doctor");
                });

            modelBuilder.Entity("HospitalProject.Models.Hospital", b =>
                {
                    b.Property<int>("hospitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("hospitalName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hospitalId");

                    b.ToTable("hospital");
                });

            modelBuilder.Entity("HospitalProject.Models.Speciality", b =>
                {
                    b.Property<int>("specialityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("specialityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("specialityId");

                    b.ToTable("speciality");
                });

            modelBuilder.Entity("HospitalProject.Models.doctor_department", b =>
                {
                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<int>("doctorId")
                        .HasColumnType("int");

                    b.HasIndex("departmentId");

                    b.HasIndex("doctorId");

                    b.ToTable("doctor_department");
                });

            modelBuilder.Entity("HospitalProject.Models.Department", b =>
                {
                    b.HasOne("HospitalProject.Models.Hospital", "hospital")
                        .WithMany("departmentList")
                        .HasForeignKey("hospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hospital");
                });

            modelBuilder.Entity("HospitalProject.Models.Doctor", b =>
                {
                    b.HasOne("HospitalProject.Models.Speciality", "speciality")
                        .WithMany("doctorList")
                        .HasForeignKey("specialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("speciality");
                });

            modelBuilder.Entity("HospitalProject.Models.doctor_department", b =>
                {
                    b.HasOne("HospitalProject.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalProject.Models.Doctor", "doctor")
                        .WithMany()
                        .HasForeignKey("doctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("HospitalProject.Models.Hospital", b =>
                {
                    b.Navigation("departmentList");
                });

            modelBuilder.Entity("HospitalProject.Models.Speciality", b =>
                {
                    b.Navigation("doctorList");
                });
#pragma warning restore 612, 618
        }
    }
}
